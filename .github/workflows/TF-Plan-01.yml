### Reusable workflow to plan terraform deployment, create artifact and upload to workflow artifacts for consumption ###
name: "Build_TF_Plan"
on:
  push:
    branches:
      - PlanBranch1
jobs:
  terraform :
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ANS_SECRET_ID }}
      AWS_REGION: "us-east-1"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color

# on:
#   workflow_call:
#     inputs:
#       path:
#         description: 'Specifies the path of the root terraform module.'
#         required: true
#         type: string
#       tf_version:
#         description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
#         required: false
#         type: string
#         default: latest
#       gh_environment:
#         description: 'Specifies the GitHub deployment environment.'
#         required: false
#         type: string
#         default: null
#       tf_vars_file:
#         description: 'Specifies the Terraform TFVARS file.'
#         required: true
#         type: string
#     secrets:
#       cli_config_credentials_token:
#         description: 'cli config credentials token'
#         required: true

# jobs:
#   build-plan:
#     runs-on: ubuntu-latest
#     environment: ${{ inputs.gh_environment }}
#     defaults:
#       run:
#         shell: bash
#         working-directory: ${{ inputs.path }}
        
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3.1.0
        
#       - name: Change file name
#         run: | 
#           mv ${{ github.workspace }}/${{ inputs.path }}/${{ inputs.gh_environment }}.tfvars  ${{ github.workspace }}/${{ inputs.path }}/${{ inputs.gh_environment }}.auto.tfvars 

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2.0.2
#         with:
#           terraform_version: ${{ inputs.tf_version }}
#           cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}

#       - name: Terraform Init
#         id: init
#         run: terraform init
      
#       - name: Terraform Validate
#         id: validate
#         run: terraform validate

#       - name: Terraform Plan
#         id: plan
#         run: terraform plan
#         continue-on-error: true

#       - name: Terraform Plan Status
#         if: steps.plan.outcome == 'failure'
#         run: exit 1